name: bazel-hw-build-and-test

on:
  workflow_dispatch: {}

env:
  BAZEL_CACHE_URL: https://storage.googleapis.com/bazel_remote_cache_0/test

jobs:
  macos-release-wheel:
    name: Build for macOS
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ env.TAG_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: google-github-actions/auth@v0
        continue-on-error: true
        with:
          credentials_json: ${{ secrets.BAZEL_REMOTE_CACHE_JSON_KEY }}
      - name: Build macOS
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/MYTEST
          if [[ -n $GOOGLE_APPLICATION_CREDENTIALS ]]; then
            echo "using Google Cloud Storage cache"
            echo -e 'build --remote_cache=${{ env.BAZEL_CACHE_URL }}/${{ runner.os }}-${{ runner.arch }}-python${{ matrix.python-version }}' >> .bazelrc.user
            echo -e 'build --google_default_credentials' >> .bazelrc.user
          fi
          bazelisk build //:hello-world --copt=-fvisibility=hidden --copt=-mavx --copt=-mmacosx-version-min=10.13 --linkopt=-mmacosx-version-min=10.13 --linkopt=-dead_strip --distinct_host_configuration=false

  macos-arm-release-wheel:
    name: Build macOS arm64
    runs-on: macos-11
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ env.TAG_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: google-github-actions/auth@v0
        continue-on-error: true
        with:
          credentials_json: ${{ secrets.BAZEL_REMOTE_CACHE_JSON_KEY }}
      - name: Build macOS arm
        shell: bash
        run: |
          cd $GITHUB_WORKSPACE/MYTEST
          if [[ -n $GOOGLE_APPLICATION_CREDENTIALS ]]; then
            echo "using Google Cloud Storage cache"
            echo -e 'build --remote_cache=${{ env.BAZEL_CACHE_URL }}/${{ runner.os }}-arm64-python${{ matrix.python-version }}' >> .bazelrc.user
            echo -e 'build --google_default_credentials' >> .bazelrc.user
          fi
          bazelisk build //:hello-world --cpu=darwin_arm64 --copt=-fvisibility=hidden --copt=-mmacosx-version-min=11.0 --linkopt=-mmacosx-version-min=11.0 --linkopt=-dead_strip  

  manylinux-release-wheel:
    name: Build for manylinux2014
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ env.TAG_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: google-github-actions/auth@v0
        continue-on-error: true
        with:
          credentials_json: ${{ secrets.BAZEL_REMOTE_CACHE_JSON_KEY }}
      - name: Build manylinux2014
        run: |
          pushd $GITHUB_WORKSPACE/MYTEST
          if [[ -n $GOOGLE_APPLICATION_CREDENTIALS ]]; then
            echo "using Google Cloud Storage cache"
            echo -e 'build --remote_cache=${{ env.BAZEL_CACHE_URL }}/${{ runner.os }}-${{ runner.arch }}-python${{ matrix.python-version }}' >> .bazelrc.user
            echo -e 'build --google_default_credentials' >> .bazelrc.user
          fi
          popd

          docker run \
            -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/gcloud-credentials.json \
            -v $GOOGLE_APPLICATION_CREDENTIALS:/tmp/gcloud-credentials.json:ro \
            -v ${PWD}:/ai_tools -w /ai_tools/MYTEST \
            l.gcr.io/google/bazel \
            build //:hello-world

  windows-release-wheel:
    name: Build for windows
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
          fetch-depth: 0
          ref: ${{ env.TAG_VERSION }}
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: google-github-actions/auth@v0
        continue-on-error: true
        with:
          credentials_json: ${{ secrets.BAZEL_REMOTE_CACHE_JSON_KEY }}
      - name: Configure pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
        with:
          minimum-size: 10GB
          maximum-size: 20GB
      - name: Set up pagefile
        shell: pwsh
        run: |
          (Get-CimInstance Win32_PageFileUsage).AllocatedBaseSize
      - name: Build windows
        shell: cmd
        run: |
          cd %GITHUB_WORKSPACE%/MYTEST
          set BAZEL_VC=C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC
          bazelisk build //:hello-world --local_ram_resources=5120 --action_env PYTHON_BIN_PATH="C:/hostedtoolcache/windows/Python/3.8.10/x64/python.exe" --remote_cache=${{ env.BAZEL_CACHE_URL }}/${{ runner.os }}-${{ runner.arch }}-python${{ matrix.python-version }} --google_default_credentials
